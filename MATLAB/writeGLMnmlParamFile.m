function writeGLMnmlParamFile(simDir, varargin)

global gblVar
gblVar = varargin;

            

    function val =  getVal(string)
        idx1 = 1:length(gblVar);
        uI1  = strcmp(gblVar,string);
        val = gblVar{idx1(uI1)+1};
    end
        
nmlDir = '../supporting files/';
% writes the glm.nml param file according to lake parameters


initZ = [0,.2,...
    max(getVal('H_csvVEC'))-min(getVal('H_csvVEC'))];
initT = [3,4,4];
initS = [0,0,0];

% MET DRIVER FILE Rename

defaults = struct(...
    'sim_name_STR','Simulation name',...    % string with quotes
    'max_layers_INT', 1000,...
    'min_layer_vol_FLT', 0.5,...
    'min_layer_thick_FLT',0.2,...
    'max_layer_thick_FLT',1,...
    'Kw_FLT',0.63,...
    'coef_inf_entrain_FLT',0,...
    'coef_mix_conv_FLT',0.33,...
    'coef_wind_stir_FLT',0.23,...
    'coef_mix_shear_FLT',0.20,...
    'coef_mix_turb_FLT',0.51,...
    'coef_mix_KH_FLT',0.30,...
    'lake_name_STR',getVal('lake_name_STR'),...
    'latitude_FLT',43,...
    'longitude_FLT',-89,...
    'base_elev_FLT',min(getVal('H_csvVEC')),...
    'crest_elev_FLT',max(getVal('H_csvVEC')),...
    'bsn_len_FLT',sqrt((max(getVal('A_csvVEC'))*1000)/pi())*2,... % pi()*R^2 = 
    'bsn_wid_FLT',sqrt((max(getVal('A_csvVEC'))*1000)/pi())*2,... % circle lake
    'bsn_vals_INT',length(getVal('A_csvVEC')),...                 % number of elements in H
    'H_csvVEC',getVal('H_csvVEC'),...
    'A_csvVEC',getVal('A_csvVEC'),...
    'start_STR','1979-01-02 00:00:00',...
    'stop_STR','2011-12-31 23:00:00',...
    'meteo_fl_STR',[getVal('lake_name_STR') '.csv'],...
    'subdaily_BL','.true.',...
    'nsave_INT',24,...
    'dt_FLT',3600.0,...
    'num_depths_INT',length(initZ),...                  % number of elements in initZ
    'lake_depth_FLT',initZ(end),...
    'the_depths_csvVEC',initZ,...
    'the_temps_csvVEC',initT,...
    'the_sals_csvVEC',initS,...
    'wind_factor_FLT',1.0,...
    'ce_FLT',0.0013,...
    'ch_FLT',0.0013,...
    'coef_wind_drag_FLT',0.0013,...
    'rain_sw_BL','.false.',...
    'snow_sw_BL','.true.',...
    'num_inflows_FLT',0,...
    'outl_elvs_FLT',1,...
    'outflow_fl_STR','outflow.csv',...
    'num_outlet_FLT',0,...
    'bsn_len_outl_FLT',5,...
    'bsn_wid_outl_FLT',5);                                  


%% replace KVPs with inputs
% provide key value pairs to change POSTinputs structure

numArgs = length(varargin);

if ne(rem(numArgs,2),0)
    error('arguments must be made in pairs')
end

for i = 1:2:numArgs
    defaults.(varargin{i}) = varargin{i+1};
end

%% read in file, replace strings with values
text = fileread([nmlDir 'glmDEFAULT.nml']);

% now loop through all params and regexprep
pNms = fieldnames(defaults);
for p = 1:length(pNms)
    nme = pNms{p};
    if strcmp(nme(end-2:end),'STR')
        text = regexprep(text,nme,[char('''') defaults.(pNms{p}) char('''')]);
    elseif strcmp(nme(end-2:end),'INT')
        text = regexprep(text,nme,sprintf('%1.0u',defaults.(pNms{p})));
    elseif strcmp(nme(end-2:end),'FLT')
        text = regexprep(text,nme,sprintf('%1.5f',defaults.(pNms{p})));
    elseif strcmp(nme(end-5:end),'csvVEC')
        text = regexprep(text,nme,sprintf('%1.5f,',defaults.(pNms{p})));
    elseif strcmp(nme(end-1:end),'BL')
        text = regexprep(text,nme,[defaults.(pNms{p})]);
    end
end

% write file back to new file

fID = fopen([simDir 'glm.nml'],'w');
fprintf(fID,'%s',text);
fclose(fID);     



end

